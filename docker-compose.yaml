version: '3.8'

# Ports:
# 17010       - MySQL database
# 17011       - Nginx
# 17012-17013 - Services

services:
  database:
    # MySQL database for all services

    image: mysql:8.0
    restart: always
    environment:
      DB_HOST: .
      MYSQL_DATABASE: "main"
      MYSQL_USER: "api"
      MYSQL_PASSWORD: "test"
      MYSQL_ROOT_PASSWORD: "test"
      MYSQL_TCP_PORT: 17010
    ports:
      - "17010:17010"
    volumes:
      - ./volumes/mySQLdata:/var/lib/mySQL # Saving data to folder "mySQLdata",
                                   # it can removed using sudo rm -rf ./mySQLdata
    healthcheck:
      # Services which use database should start only after healthcheck. 
      # Otherwise they will throw an error
      test: ["CMD", "curl", "-f", "http://localhost:17010"]
      interval: 5s
      timeout: 10s
      retries: 5

  nginx:
    # Nginx is used to merge users-api and balances-api in one address and port
    # /api/v2/users - users-api
    # /api/v2/balances - balances-api

    image: nginx:latest
    ports:
      - "8080:8080" # Custom port, because standart is always busy
    restart: always
    volumes:
      - ./volumes/etc/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./volumes/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./volumes/etc/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./volumes/etc/nginx/ssl:/etc/nginx/ssl:ro
      - ./volumes/etc/nginx/var/www/:/var/www/
    depends_on:
      - users-api # Nginx will run only after services


  users-api:
    # Service to manage users and check user's password

    build: 
      context: ./
      dockerfile: ./users/Dockerfile
    restart: on-failure
    command: uvicorn main:app --reload --host 0.0.0.0 --port 17012
    environment:
      DB_HOST: "database"
      DB_PORT: 17010
      DB_USER: "api"
      DB_PASSWORD: "test"
      DB_MAIN: "main"
      DB_TEST: "test"
      TESTING: true
      PREFIX: "/api/v2"
    ports:
      - "17012:17012"
    depends_on:
      database:
        condition: service_healthy # Starting only after DB

networks:
  default:
    # Containers local network
    driver: bridge